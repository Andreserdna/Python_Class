Ch 4 Programming Assignment:
Exercise 4.7, 4.11, 4.17, (4.23)
#Andres Valenzuela Tamayo

#4.7(Financial application: monetary units) Modify Listing 3.4, ComputeChange.py,
#to display the not equal to zero denominations only, using singular words for single units
#such as 1 dollar and 1 penny, and plural words for more than one unit such as 2
#dollars and 3 pennies


# Receive the amount
amount = eval(input("Enter an amount, for example, 11.56: "))

# Convert the amount to cents
remainingAmount = int(amount * 100)

# Find the number of one dollars
numberOfOneDollars = remainingAmount // 100
remainingAmount = remainingAmount % 100
# Find the number of quarters in the remaining amount
numberOfQuarters = remainingAmount // 25
remainingAmount = remainingAmount % 25
# Find the number of dimes in the remaining amount
numberOfDimes = remainingAmount // 10
remainingAmount = remainingAmount % 10

 # Find the number of nickels in the remaining amount
numberOfNickels = remainingAmount // 5
remainingAmount = remainingAmount % 5
# Find the number of pennies in the remaining amount
numberOfPennies = remainingAmount

# Display the results
print("Your amount", amount, "consists of: ")
if numberOfOneDollars == 0:
	pass
elif numberOfOneDollars <= 1:
	print('\t' + str(numberOfOneDollars) + ' '+ 'dollar')
elif numberOfOneDollars > 1:
	print('\t' + str(numberOfOneDollars) + ' '+ 'dollars')
if numberOfQuarters == 0:
	pass
elif numberOfQuarters <= 1:
	print('\t' + str(numberOfQuarters) + ' '+ 'quarter')
elif numberOfQuarters > 1:
	print('\t' + str(numberOfQuarters) + ' ' + 'quarters')
if numberOfDimes == 0:
	pass
elif numberOfDimes <= 1:
	print('\t' + str(numberOfDimes) + ' '+ 'dime')
elif numberOfDimes > 1:
	print('\t' + str(numberOfDimes) + ' ' + 'dimes')
if numberOfNickels == 0:
	 pass
elif numberOfNickels <= 1:
	print('\t' + str(numberOfNickels) + ' '+ 'nickel')
elif numberOfNickels > 1:
	print('\t' + str(numberOfNickels) + ' ' + 'nickels')
if numberOfPennies == 0:
	pass
elif numberOfPennies <= 1:
	print('\t' + str(numberOfPennies) + ' '+ 'penny')
elif numberOfPennies > 1:
	print('\t' + str(numberOfPennies) + ' ' + 'pennies')

>>>
Enter an amount, for example, 11.56: 1.89
Your amount 1.89 consists of: 
	1 dollar
	3 quarters
	1 dime
	4 pennies


Enter an amount, for example, 11.56: 11.78
Your amount 11.78 consists of: 
	11 dollars
	3 quarters
	3 pennies


>>>



#4.11 (Find the number of days in a month) Write a program that prompts the user to
#enter the month and year and displays the number of days in the month. For example, if the user entered month 2 and year 2000, #the program should display that
#February 2000 has 29 days. If the user entered month 3 and year 2005, the program should display that March 2005 has 31 days. 

user_month = int(input("Please Enter a month: "))
user_year = eval(input("Enter a year: "))
month31 = {1:"January",3:"March",5:"May",7:"July",10:"October",12:"December"}
month30 = {4:"April",6:"June",9:"September",11:"November"}

isLeapYear = (user_year % 4 == 0 and user_year % 100 != 0) or \
	(user_year % 400 == 0)

if user_month == 2 and isLeapYear == True:
	print("February " + str(user_year) + " has 29 days!")
elif user_month == 2 and isLeapYear == False:
	print("February " + str(user_year) + " has 28 days!")

if user_month in month31:
	print(str(month31[user_month]) + ' ' + str(user_year) + ' ' + 'has 31 days')

if user_month in month30:
	print(str(month31[user_month]) + ' ' + str(user_year) + ' ' + 'has 30 days')



>>>

Please Enter a month: 2
Enter a year: 2008
February 2008 has 29 days!

Please Enter a month: 3
Enter a year: 23008
March 23008 has 31 days

Please Enter a month: 11
Enter a year: 2000
November 2000 has 30 days

>>>

#4_17(Game: Rock,Paper,Scissor)
import random
import sys
#4.17(Game: scissor, rock, paper)
choices = ['scissor','rock','paper']


def print_statement(comp_answer,user_answer,list_items):
	print('Computer chose ' + str(list_items[comp_answer]) + \
		"\nYou chose " + str(list_items[user_answer]))

user_answer = int(input("Let's play a game of Rock, Paper, Scissors!\n\nPlease select from the following\nScissor(0), rock(1), paper(2): "))
computer_answer = random.randint(0,2)


#if draw
if user_answer == computer_answer:
	print_statement(computer_answer,user_answer,choices)
	print('Its a draw')
#sci loses to rock
elif user_answer == 0 and computer_answer == 1:
	print_statement(computer_answer,user_answer,choices)
	print("you lost!")
#sci wins over paper
elif user_answer == 0 and computer_answer == 2:
	print_statement(computer_answer,user_answer,choices)
	print("you won!")
#rock beats sci
elif user_answer == 1 and computer_answer == 0:
	print_statement(computer_answer,user_answer,choices)
	print("you won!")
#rock loses to paper
elif user_answer == 1 and computer_answer == 2:
	print_statement(computer_answer,user_answer,choices)
	print("you lost!")
#paper loses to sci
elif user_answer == 2 and computer_answer == 0:
	print_statement(computer_answer,user_answer,choices)
	print("you lost!")
#paper wins over rock
elif user_answer == 2 and computer_answer == 1:
	print_statement(computer_answer,user_answer,choices)
	print("you won!")

else:
	print("Did you make a proper selection?")
	sys.exit()

>>>

Please select from the following
Scissor(0), rock(1), paper(2): 0
Computer chose scissor
You chose scissor
Its a draw


Please select from the following
Scissor(0), rock(1), paper(2): 1
Computer chose scissor
You chose rock
you won!

Please select from the following
Scissor(0), rock(1), paper(2): 2
Computer chose scissor
You chose paper
you lost!

>>>